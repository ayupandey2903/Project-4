using UnityEngine;

namespace Assets.Scripts
{
    public class SpawnManager : MonoBehaviour
    {
        // public variables
        [Tooltip("Enemy Prefab Array")]
        [SerializeField] public GameObject[] enemyPrefabsArray;

        [Tooltip("Boss Enemy Prefab")]
        [SerializeField] public GameObject bossEnemyPrefab;

        [Tooltip("Array of Mini Enemies that spawn with boss")]
        [SerializeField] public GameObject[] miniEnemyPrefabs;

        [Tooltip("Power Up Prefab Array")]
        [SerializeField] public GameObject[] powerUpPrefabs;

        public int bossRound;

        [HideInInspector] public int waveNumber = 1;

        // private variables
        private const float spawnRange = 9.0f;

        // Start is called before the first frame update
        private void Start()
        {
            var randomPowerUpIndex = Random.Range(0, powerUpPrefabs.Length);
            Instantiate(powerUpPrefabs[randomPowerUpIndex], GenerateSpawnPos(), powerUpPrefabs[randomPowerUpIndex].transform.rotation);
            SpawnEnemyWave(waveNumber);
        }

        // Spawns a number of enemies at random positions of the island
        private void SpawnEnemyWave(int enemiesToSpawn)
        {
            for (var i = 0; i < enemiesToSpawn; i++)
            {
                // generates a random index for the enemy prefab array and
                // creates a new instance of enemyPrefab at the position generated by GenerateSpawnPos()
                // and with the rotation of enemyPrefab
                var enemyIndex = Random.Range(0, enemyPrefabsArray.Length);
                Instantiate(enemyPrefabsArray[enemyIndex], GenerateSpawnPos(),
                    enemyPrefabsArray[enemyIndex].transform.rotation);
            }
        }

        private static Vector3 GenerateSpawnPos()
        {
            // This function generates a random spawn position for a game object to spawn in the game world.
            // The spawn position is a Vector3 with a random x and z value between -spawnRange and spawnRange
            // and a y value of 0.
            var spawnPosX = Random.Range(spawnRange, -spawnRange);
            var spawnPosZ = Random.Range(spawnRange, -spawnRange);
            Vector3 spawnPos = new(spawnPosX, 0, spawnPosZ);
            return spawnPos;
        }

        [HideInInspector]
        public int activeEnemies;

        // Update is called once per frame
        private void Update()
        {
            // Finds all the Game Objects of type Enemy in the scene and stores them in an array and
            // assigns Active Enemy number in the scene to the variable ActiveEnemies.
            // Then checks if the number of active enemies is 0 and if so,
            // spawns a new wave of enemies with one enemy more than the previous wave.
            // also spawns a power up at a random position on the island.
            activeEnemies = FindObjectsOfType<Enemy>().Length;
            if (activeEnemies != 0) return;
            waveNumber++;
            if (waveNumber % bossRound == 0)
            {
                SpawnBossWave(waveNumber);
            }
            else
            {
                SpawnEnemyWave(waveNumber);
            }

            var randomPowerUpIndex = Random.Range(0, powerUpPrefabs.Length);
            Instantiate(powerUpPrefabs[randomPowerUpIndex], GenerateSpawnPos(), powerUpPrefabs[randomPowerUpIndex].transform.rotation);
        }

        private void SpawnBossWave(int currentRound)
        {
            int miniEnemiesToSpawn;

            if (bossRound != 0)
            {
                miniEnemiesToSpawn = currentRound / bossRound;
            }
            else
            {
                miniEnemiesToSpawn = 1;
            }

            var boss = Instantiate(bossEnemyPrefab, GenerateSpawnPos(), bossEnemyPrefab.transform.rotation);

            boss.GetComponent<Enemy>().miniEnemyCount = miniEnemiesToSpawn;
        }

        public void SpawnMiniEnemy(int miniEnemyCount)
        {
            for (var i = 0; i < miniEnemyCount; i++)
            {
                var randomMini = Random.Range(0, miniEnemyPrefabs.Length);
                Instantiate(miniEnemyPrefabs[randomMini], GenerateSpawnPos(),
                    miniEnemyPrefabs[randomMini].transform.rotation);
            }
        }
    }
}